@charset "UTF-8";

body {
  background-image: url(/images/green.jpg?2f725b550228c29b257e6b72adcc9fe1);
  background-size: cover;
}

.col-md-2 {
  color: #FFFFFF;
  padding-top: 6px;
}

.form-group row {
  margin-top: 5px;
}

.form-control {
  border: 3px solid green;
}

.main {
  margin: 0 auto;
}

.my-big {
  font-size: 15em;
}

.master {
  float: left;
  width: 50%;
}

.fa-stack-1x {
  font-size: 0.3em;
  margin-top: 85px;
  font-color: #FFFFFF;
}

.container {
  width: 100%;
  padding: 0 15px;
  margin: 0 auto;
}

.top-wrapper {
  text-align: center;
  padding-bottom: 30px;
  color: #FFFFFF;
}

.blink {
  -webkit-animation: blinkAnime 1s infinite alternate;
          animation: blinkAnime 1s infinite alternate;
  font-size: 20px;
}

@-webkit-keyframes blinkAnime {
  0% {
    color: #000000;
  }

  100% {
    color: #ff0000;
  }
}

@keyframes blinkAnime {
  0% {
    color: #000000;
  }

  100% {
    color: #ff0000;
  }
}

.back {
  display: inline-block;
  border-radius: 5%;
  /* 角丸       */
  font-size: 18pt;
  /* 文字サイズ */
  text-align: center;
  /* 文字位置   */
  cursor: pointer;
  /* カーソル   */
  padding: 12px 12px;
  /* 余白       */
  background: #003300;
  /* 背景色     */
  color: #999999;
  /* 文字色     */
  line-height: 1em;
  /* 1行の高さ  */
  transition: 0.3s;
  /* なめらか変化 */
  box-shadow: 6px 6px 3px #666666;
  /* 影の設定 */
  border: 2px solid #003300;
  /* 枠の指定 */
}

.back:hover {
  box-shadow: none;
  /* カーソル時の影消去 */
  color: #003300;
  /* 背景色     */
  background: #999999;
  /* 文字色     */
}

.top {
  margin-left: 150px;
  padding-bottom: 10px;
}

.index {
  display: inline-block;
  width: 180px;
  height: 54px;
  text-align: center;
  text-decoration: none;
  line-height: 54px;
  outline: none;
  font-size: 20px;
  position: relative;
  z-index: 2;
  background-color: teal;
  border: 2px solid #333;
  color: #333;
  line-height: 50px;
  overflow: hidden;
  margin: 10px 0 0 5px;
}

.index:hover {
  color: #fff;
}

.index:hover::after {
  background: #333;
  transform: scale(1);
}

.index::before,
.index::after {
  position: absolute;
  z-index: -1;
  display: block;
  content: "";
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transform: scale(0.5);
}

.index,
.index::before,
.index::after {
  box-sizing: border-box;
  transition: all 0.3s;
}

.gun-form-group {
  margin-top: 5px;
  font-size: 20px;
  color: yellow;
}

.right {
  float: right;
  padding-right: 90px;
}

.gunBody {
  white-space: pre-wrap;
}

/* === ベースのBOX =============================================== */

.nextReadBox {
  position: relative;
  /* relative指定は必須   */
  overflow: hidden;
  /* hidden指定は必須     */
  transition: 0.5s;
  /* 開閉の速度           */
  height: 200px;
  /* 閉じているときの高さ */
  background: #fff;
  /* 色や文字情報は変更ください */
  line-height: 1.3;
  padding: 5px 10px;
  text-align: left;
  font-size: 10pt;
  border: 3px solid #999;
  border-radius: 8px;
  max-width: 1100px;
  margin: auto;
}

/* === チェックボックス ========================================== */

.nextReadBox > input {
  display: none;
  /* 非表示 */
}

/* === チェックボックスのlabel（＝ボタンに見せる） =============== */

.nextReadBox > label {
  position: absolute;
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  bottom: 0;
  /* 左右いっぱいのBOXにグラデーションを付ける */
  left: 0;
  right: 0;
  height: 60px;
  background: linear-gradient(rgba(255, 255, 255, 0.1), #ffffff 65%);
  padding-top: 40px;
  /* 下寄せに文字を配置する */
  text-align: center;
  font-size: 15px;
  color: #0059b3;
}

/* === 開いているときのボタンサイズを変更 ======================== */

.nextReadBox > input[type=checkbox]:checked + label {
  background: rgba(255, 255, 255, 0.6);
  height: 25px;
  padding-top: 5px;
  font-size: 12px;
}

/* === ボタンに表示する文字（閉じているとき） ==================== */

.nextReadBox > input[type=checkbox]:not(:checked) + label::after {
  content: "\7D9A\304D\3092\958B\304F";
}

/* === ボタンに表示する文字（開いているとき） ==================== */

.nextReadBox > input[type=checkbox]:checked + label::after {
  content: "\9589\3058\308B";
}

